/**
 * Autogenerated by Thrift Compiler (0.14.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.zhou.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.2)")
public class TUserVerifyInfo implements org.apache.thrift.TBase<TUserVerifyInfo, TUserVerifyInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TUserVerifyInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TUserVerifyInfo");

  private static final org.apache.thrift.protocol.TField VERIFY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("verifyType", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField IDENTITY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("identityStatus", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField VERIFY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("verifyStatus", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField VERIFY_SHOW_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("verifyShowContent", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField VERIFY_FIRST_CLASS_FIELD_DESC = new org.apache.thrift.protocol.TField("verifyFirstClass", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField VERIFY_SECOND_CLASS_FIELD_DESC = new org.apache.thrift.protocol.TField("verifySecondClass", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField EXTRA_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("extraInfo", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TUserVerifyInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TUserVerifyInfoTupleSchemeFactory();

  /**
   * 
   * @see UserVerifyType
   */
  public @org.apache.thrift.annotation.Nullable UserVerifyType verifyType; // required
  /**
   * 
   * @see IdentityStatus
   */
  public @org.apache.thrift.annotation.Nullable IdentityStatus identityStatus; // required
  /**
   * 
   * @see VerifyStatus
   */
  public @org.apache.thrift.annotation.Nullable VerifyStatus verifyStatus; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String verifyShowContent; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String verifyFirstClass; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String verifySecondClass; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String extraInfo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see UserVerifyType
     */
    VERIFY_TYPE((short)1, "verifyType"),
    /**
     * 
     * @see IdentityStatus
     */
    IDENTITY_STATUS((short)2, "identityStatus"),
    /**
     * 
     * @see VerifyStatus
     */
    VERIFY_STATUS((short)3, "verifyStatus"),
    VERIFY_SHOW_CONTENT((short)4, "verifyShowContent"),
    VERIFY_FIRST_CLASS((short)5, "verifyFirstClass"),
    VERIFY_SECOND_CLASS((short)6, "verifySecondClass"),
    EXTRA_INFO((short)7, "extraInfo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // VERIFY_TYPE
          return VERIFY_TYPE;
        case 2: // IDENTITY_STATUS
          return IDENTITY_STATUS;
        case 3: // VERIFY_STATUS
          return VERIFY_STATUS;
        case 4: // VERIFY_SHOW_CONTENT
          return VERIFY_SHOW_CONTENT;
        case 5: // VERIFY_FIRST_CLASS
          return VERIFY_FIRST_CLASS;
        case 6: // VERIFY_SECOND_CLASS
          return VERIFY_SECOND_CLASS;
        case 7: // EXTRA_INFO
          return EXTRA_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.VERIFY_SHOW_CONTENT,_Fields.VERIFY_FIRST_CLASS,_Fields.VERIFY_SECOND_CLASS,_Fields.EXTRA_INFO};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.VERIFY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("verifyType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, UserVerifyType.class)));
    tmpMap.put(_Fields.IDENTITY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("identityStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, IdentityStatus.class)));
    tmpMap.put(_Fields.VERIFY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("verifyStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, VerifyStatus.class)));
    tmpMap.put(_Fields.VERIFY_SHOW_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("verifyShowContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERIFY_FIRST_CLASS, new org.apache.thrift.meta_data.FieldMetaData("verifyFirstClass", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERIFY_SECOND_CLASS, new org.apache.thrift.meta_data.FieldMetaData("verifySecondClass", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_INFO, new org.apache.thrift.meta_data.FieldMetaData("extraInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TUserVerifyInfo.class, metaDataMap);
  }

  public TUserVerifyInfo() {
  }

  public TUserVerifyInfo(
    UserVerifyType verifyType,
    IdentityStatus identityStatus,
    VerifyStatus verifyStatus)
  {
    this();
    this.verifyType = verifyType;
    this.identityStatus = identityStatus;
    this.verifyStatus = verifyStatus;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TUserVerifyInfo(TUserVerifyInfo other) {
    if (other.isSetVerifyType()) {
      this.verifyType = other.verifyType;
    }
    if (other.isSetIdentityStatus()) {
      this.identityStatus = other.identityStatus;
    }
    if (other.isSetVerifyStatus()) {
      this.verifyStatus = other.verifyStatus;
    }
    if (other.isSetVerifyShowContent()) {
      this.verifyShowContent = other.verifyShowContent;
    }
    if (other.isSetVerifyFirstClass()) {
      this.verifyFirstClass = other.verifyFirstClass;
    }
    if (other.isSetVerifySecondClass()) {
      this.verifySecondClass = other.verifySecondClass;
    }
    if (other.isSetExtraInfo()) {
      this.extraInfo = other.extraInfo;
    }
  }

  public TUserVerifyInfo deepCopy() {
    return new TUserVerifyInfo(this);
  }

  @Override
  public void clear() {
    this.verifyType = null;
    this.identityStatus = null;
    this.verifyStatus = null;
    this.verifyShowContent = null;
    this.verifyFirstClass = null;
    this.verifySecondClass = null;
    this.extraInfo = null;
  }

  /**
   * 
   * @see UserVerifyType
   */
  @org.apache.thrift.annotation.Nullable
  public UserVerifyType getVerifyType() {
    return this.verifyType;
  }

  /**
   * 
   * @see UserVerifyType
   */
  public TUserVerifyInfo setVerifyType(@org.apache.thrift.annotation.Nullable UserVerifyType verifyType) {
    this.verifyType = verifyType;
    return this;
  }

  public void unsetVerifyType() {
    this.verifyType = null;
  }

  /** Returns true if field verifyType is set (has been assigned a value) and false otherwise */
  public boolean isSetVerifyType() {
    return this.verifyType != null;
  }

  public void setVerifyTypeIsSet(boolean value) {
    if (!value) {
      this.verifyType = null;
    }
  }

  /**
   * 
   * @see IdentityStatus
   */
  @org.apache.thrift.annotation.Nullable
  public IdentityStatus getIdentityStatus() {
    return this.identityStatus;
  }

  /**
   * 
   * @see IdentityStatus
   */
  public TUserVerifyInfo setIdentityStatus(@org.apache.thrift.annotation.Nullable IdentityStatus identityStatus) {
    this.identityStatus = identityStatus;
    return this;
  }

  public void unsetIdentityStatus() {
    this.identityStatus = null;
  }

  /** Returns true if field identityStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetIdentityStatus() {
    return this.identityStatus != null;
  }

  public void setIdentityStatusIsSet(boolean value) {
    if (!value) {
      this.identityStatus = null;
    }
  }

  /**
   * 
   * @see VerifyStatus
   */
  @org.apache.thrift.annotation.Nullable
  public VerifyStatus getVerifyStatus() {
    return this.verifyStatus;
  }

  /**
   * 
   * @see VerifyStatus
   */
  public TUserVerifyInfo setVerifyStatus(@org.apache.thrift.annotation.Nullable VerifyStatus verifyStatus) {
    this.verifyStatus = verifyStatus;
    return this;
  }

  public void unsetVerifyStatus() {
    this.verifyStatus = null;
  }

  /** Returns true if field verifyStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetVerifyStatus() {
    return this.verifyStatus != null;
  }

  public void setVerifyStatusIsSet(boolean value) {
    if (!value) {
      this.verifyStatus = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getVerifyShowContent() {
    return this.verifyShowContent;
  }

  public TUserVerifyInfo setVerifyShowContent(@org.apache.thrift.annotation.Nullable java.lang.String verifyShowContent) {
    this.verifyShowContent = verifyShowContent;
    return this;
  }

  public void unsetVerifyShowContent() {
    this.verifyShowContent = null;
  }

  /** Returns true if field verifyShowContent is set (has been assigned a value) and false otherwise */
  public boolean isSetVerifyShowContent() {
    return this.verifyShowContent != null;
  }

  public void setVerifyShowContentIsSet(boolean value) {
    if (!value) {
      this.verifyShowContent = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getVerifyFirstClass() {
    return this.verifyFirstClass;
  }

  public TUserVerifyInfo setVerifyFirstClass(@org.apache.thrift.annotation.Nullable java.lang.String verifyFirstClass) {
    this.verifyFirstClass = verifyFirstClass;
    return this;
  }

  public void unsetVerifyFirstClass() {
    this.verifyFirstClass = null;
  }

  /** Returns true if field verifyFirstClass is set (has been assigned a value) and false otherwise */
  public boolean isSetVerifyFirstClass() {
    return this.verifyFirstClass != null;
  }

  public void setVerifyFirstClassIsSet(boolean value) {
    if (!value) {
      this.verifyFirstClass = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getVerifySecondClass() {
    return this.verifySecondClass;
  }

  public TUserVerifyInfo setVerifySecondClass(@org.apache.thrift.annotation.Nullable java.lang.String verifySecondClass) {
    this.verifySecondClass = verifySecondClass;
    return this;
  }

  public void unsetVerifySecondClass() {
    this.verifySecondClass = null;
  }

  /** Returns true if field verifySecondClass is set (has been assigned a value) and false otherwise */
  public boolean isSetVerifySecondClass() {
    return this.verifySecondClass != null;
  }

  public void setVerifySecondClassIsSet(boolean value) {
    if (!value) {
      this.verifySecondClass = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getExtraInfo() {
    return this.extraInfo;
  }

  public TUserVerifyInfo setExtraInfo(@org.apache.thrift.annotation.Nullable java.lang.String extraInfo) {
    this.extraInfo = extraInfo;
    return this;
  }

  public void unsetExtraInfo() {
    this.extraInfo = null;
  }

  /** Returns true if field extraInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraInfo() {
    return this.extraInfo != null;
  }

  public void setExtraInfoIsSet(boolean value) {
    if (!value) {
      this.extraInfo = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case VERIFY_TYPE:
      if (value == null) {
        unsetVerifyType();
      } else {
        setVerifyType((UserVerifyType)value);
      }
      break;

    case IDENTITY_STATUS:
      if (value == null) {
        unsetIdentityStatus();
      } else {
        setIdentityStatus((IdentityStatus)value);
      }
      break;

    case VERIFY_STATUS:
      if (value == null) {
        unsetVerifyStatus();
      } else {
        setVerifyStatus((VerifyStatus)value);
      }
      break;

    case VERIFY_SHOW_CONTENT:
      if (value == null) {
        unsetVerifyShowContent();
      } else {
        setVerifyShowContent((java.lang.String)value);
      }
      break;

    case VERIFY_FIRST_CLASS:
      if (value == null) {
        unsetVerifyFirstClass();
      } else {
        setVerifyFirstClass((java.lang.String)value);
      }
      break;

    case VERIFY_SECOND_CLASS:
      if (value == null) {
        unsetVerifySecondClass();
      } else {
        setVerifySecondClass((java.lang.String)value);
      }
      break;

    case EXTRA_INFO:
      if (value == null) {
        unsetExtraInfo();
      } else {
        setExtraInfo((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case VERIFY_TYPE:
      return getVerifyType();

    case IDENTITY_STATUS:
      return getIdentityStatus();

    case VERIFY_STATUS:
      return getVerifyStatus();

    case VERIFY_SHOW_CONTENT:
      return getVerifyShowContent();

    case VERIFY_FIRST_CLASS:
      return getVerifyFirstClass();

    case VERIFY_SECOND_CLASS:
      return getVerifySecondClass();

    case EXTRA_INFO:
      return getExtraInfo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case VERIFY_TYPE:
      return isSetVerifyType();
    case IDENTITY_STATUS:
      return isSetIdentityStatus();
    case VERIFY_STATUS:
      return isSetVerifyStatus();
    case VERIFY_SHOW_CONTENT:
      return isSetVerifyShowContent();
    case VERIFY_FIRST_CLASS:
      return isSetVerifyFirstClass();
    case VERIFY_SECOND_CLASS:
      return isSetVerifySecondClass();
    case EXTRA_INFO:
      return isSetExtraInfo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TUserVerifyInfo)
      return this.equals((TUserVerifyInfo)that);
    return false;
  }

  public boolean equals(TUserVerifyInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_verifyType = true && this.isSetVerifyType();
    boolean that_present_verifyType = true && that.isSetVerifyType();
    if (this_present_verifyType || that_present_verifyType) {
      if (!(this_present_verifyType && that_present_verifyType))
        return false;
      if (!this.verifyType.equals(that.verifyType))
        return false;
    }

    boolean this_present_identityStatus = true && this.isSetIdentityStatus();
    boolean that_present_identityStatus = true && that.isSetIdentityStatus();
    if (this_present_identityStatus || that_present_identityStatus) {
      if (!(this_present_identityStatus && that_present_identityStatus))
        return false;
      if (!this.identityStatus.equals(that.identityStatus))
        return false;
    }

    boolean this_present_verifyStatus = true && this.isSetVerifyStatus();
    boolean that_present_verifyStatus = true && that.isSetVerifyStatus();
    if (this_present_verifyStatus || that_present_verifyStatus) {
      if (!(this_present_verifyStatus && that_present_verifyStatus))
        return false;
      if (!this.verifyStatus.equals(that.verifyStatus))
        return false;
    }

    boolean this_present_verifyShowContent = true && this.isSetVerifyShowContent();
    boolean that_present_verifyShowContent = true && that.isSetVerifyShowContent();
    if (this_present_verifyShowContent || that_present_verifyShowContent) {
      if (!(this_present_verifyShowContent && that_present_verifyShowContent))
        return false;
      if (!this.verifyShowContent.equals(that.verifyShowContent))
        return false;
    }

    boolean this_present_verifyFirstClass = true && this.isSetVerifyFirstClass();
    boolean that_present_verifyFirstClass = true && that.isSetVerifyFirstClass();
    if (this_present_verifyFirstClass || that_present_verifyFirstClass) {
      if (!(this_present_verifyFirstClass && that_present_verifyFirstClass))
        return false;
      if (!this.verifyFirstClass.equals(that.verifyFirstClass))
        return false;
    }

    boolean this_present_verifySecondClass = true && this.isSetVerifySecondClass();
    boolean that_present_verifySecondClass = true && that.isSetVerifySecondClass();
    if (this_present_verifySecondClass || that_present_verifySecondClass) {
      if (!(this_present_verifySecondClass && that_present_verifySecondClass))
        return false;
      if (!this.verifySecondClass.equals(that.verifySecondClass))
        return false;
    }

    boolean this_present_extraInfo = true && this.isSetExtraInfo();
    boolean that_present_extraInfo = true && that.isSetExtraInfo();
    if (this_present_extraInfo || that_present_extraInfo) {
      if (!(this_present_extraInfo && that_present_extraInfo))
        return false;
      if (!this.extraInfo.equals(that.extraInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetVerifyType()) ? 131071 : 524287);
    if (isSetVerifyType())
      hashCode = hashCode * 8191 + verifyType.getValue();

    hashCode = hashCode * 8191 + ((isSetIdentityStatus()) ? 131071 : 524287);
    if (isSetIdentityStatus())
      hashCode = hashCode * 8191 + identityStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetVerifyStatus()) ? 131071 : 524287);
    if (isSetVerifyStatus())
      hashCode = hashCode * 8191 + verifyStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetVerifyShowContent()) ? 131071 : 524287);
    if (isSetVerifyShowContent())
      hashCode = hashCode * 8191 + verifyShowContent.hashCode();

    hashCode = hashCode * 8191 + ((isSetVerifyFirstClass()) ? 131071 : 524287);
    if (isSetVerifyFirstClass())
      hashCode = hashCode * 8191 + verifyFirstClass.hashCode();

    hashCode = hashCode * 8191 + ((isSetVerifySecondClass()) ? 131071 : 524287);
    if (isSetVerifySecondClass())
      hashCode = hashCode * 8191 + verifySecondClass.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtraInfo()) ? 131071 : 524287);
    if (isSetExtraInfo())
      hashCode = hashCode * 8191 + extraInfo.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TUserVerifyInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetVerifyType(), other.isSetVerifyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVerifyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verifyType, other.verifyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIdentityStatus(), other.isSetIdentityStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdentityStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.identityStatus, other.identityStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVerifyStatus(), other.isSetVerifyStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVerifyStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verifyStatus, other.verifyStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVerifyShowContent(), other.isSetVerifyShowContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVerifyShowContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verifyShowContent, other.verifyShowContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVerifyFirstClass(), other.isSetVerifyFirstClass());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVerifyFirstClass()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verifyFirstClass, other.verifyFirstClass);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVerifySecondClass(), other.isSetVerifySecondClass());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVerifySecondClass()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verifySecondClass, other.verifySecondClass);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetExtraInfo(), other.isSetExtraInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraInfo, other.extraInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TUserVerifyInfo(");
    boolean first = true;

    sb.append("verifyType:");
    if (this.verifyType == null) {
      sb.append("null");
    } else {
      sb.append(this.verifyType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("identityStatus:");
    if (this.identityStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.identityStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("verifyStatus:");
    if (this.verifyStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.verifyStatus);
    }
    first = false;
    if (isSetVerifyShowContent()) {
      if (!first) sb.append(", ");
      sb.append("verifyShowContent:");
      if (this.verifyShowContent == null) {
        sb.append("null");
      } else {
        sb.append(this.verifyShowContent);
      }
      first = false;
    }
    if (isSetVerifyFirstClass()) {
      if (!first) sb.append(", ");
      sb.append("verifyFirstClass:");
      if (this.verifyFirstClass == null) {
        sb.append("null");
      } else {
        sb.append(this.verifyFirstClass);
      }
      first = false;
    }
    if (isSetVerifySecondClass()) {
      if (!first) sb.append(", ");
      sb.append("verifySecondClass:");
      if (this.verifySecondClass == null) {
        sb.append("null");
      } else {
        sb.append(this.verifySecondClass);
      }
      first = false;
    }
    if (isSetExtraInfo()) {
      if (!first) sb.append(", ");
      sb.append("extraInfo:");
      if (this.extraInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.extraInfo);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (verifyType == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'verifyType' was not present! Struct: " + toString());
    }
    if (identityStatus == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'identityStatus' was not present! Struct: " + toString());
    }
    if (verifyStatus == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'verifyStatus' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TUserVerifyInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUserVerifyInfoStandardScheme getScheme() {
      return new TUserVerifyInfoStandardScheme();
    }
  }

  private static class TUserVerifyInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<TUserVerifyInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TUserVerifyInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // VERIFY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.verifyType = com.zhou.thrift.UserVerifyType.findByValue(iprot.readI32());
              struct.setVerifyTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // IDENTITY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.identityStatus = com.zhou.thrift.IdentityStatus.findByValue(iprot.readI32());
              struct.setIdentityStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VERIFY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.verifyStatus = com.zhou.thrift.VerifyStatus.findByValue(iprot.readI32());
              struct.setVerifyStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERIFY_SHOW_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.verifyShowContent = iprot.readString();
              struct.setVerifyShowContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VERIFY_FIRST_CLASS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.verifyFirstClass = iprot.readString();
              struct.setVerifyFirstClassIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VERIFY_SECOND_CLASS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.verifySecondClass = iprot.readString();
              struct.setVerifySecondClassIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // EXTRA_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extraInfo = iprot.readString();
              struct.setExtraInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TUserVerifyInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.verifyType != null) {
        oprot.writeFieldBegin(VERIFY_TYPE_FIELD_DESC);
        oprot.writeI32(struct.verifyType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.identityStatus != null) {
        oprot.writeFieldBegin(IDENTITY_STATUS_FIELD_DESC);
        oprot.writeI32(struct.identityStatus.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.verifyStatus != null) {
        oprot.writeFieldBegin(VERIFY_STATUS_FIELD_DESC);
        oprot.writeI32(struct.verifyStatus.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.verifyShowContent != null) {
        if (struct.isSetVerifyShowContent()) {
          oprot.writeFieldBegin(VERIFY_SHOW_CONTENT_FIELD_DESC);
          oprot.writeString(struct.verifyShowContent);
          oprot.writeFieldEnd();
        }
      }
      if (struct.verifyFirstClass != null) {
        if (struct.isSetVerifyFirstClass()) {
          oprot.writeFieldBegin(VERIFY_FIRST_CLASS_FIELD_DESC);
          oprot.writeString(struct.verifyFirstClass);
          oprot.writeFieldEnd();
        }
      }
      if (struct.verifySecondClass != null) {
        if (struct.isSetVerifySecondClass()) {
          oprot.writeFieldBegin(VERIFY_SECOND_CLASS_FIELD_DESC);
          oprot.writeString(struct.verifySecondClass);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraInfo != null) {
        if (struct.isSetExtraInfo()) {
          oprot.writeFieldBegin(EXTRA_INFO_FIELD_DESC);
          oprot.writeString(struct.extraInfo);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TUserVerifyInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUserVerifyInfoTupleScheme getScheme() {
      return new TUserVerifyInfoTupleScheme();
    }
  }

  private static class TUserVerifyInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<TUserVerifyInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TUserVerifyInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.verifyType.getValue());
      oprot.writeI32(struct.identityStatus.getValue());
      oprot.writeI32(struct.verifyStatus.getValue());
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetVerifyShowContent()) {
        optionals.set(0);
      }
      if (struct.isSetVerifyFirstClass()) {
        optionals.set(1);
      }
      if (struct.isSetVerifySecondClass()) {
        optionals.set(2);
      }
      if (struct.isSetExtraInfo()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetVerifyShowContent()) {
        oprot.writeString(struct.verifyShowContent);
      }
      if (struct.isSetVerifyFirstClass()) {
        oprot.writeString(struct.verifyFirstClass);
      }
      if (struct.isSetVerifySecondClass()) {
        oprot.writeString(struct.verifySecondClass);
      }
      if (struct.isSetExtraInfo()) {
        oprot.writeString(struct.extraInfo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TUserVerifyInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.verifyType = com.zhou.thrift.UserVerifyType.findByValue(iprot.readI32());
      struct.setVerifyTypeIsSet(true);
      struct.identityStatus = com.zhou.thrift.IdentityStatus.findByValue(iprot.readI32());
      struct.setIdentityStatusIsSet(true);
      struct.verifyStatus = com.zhou.thrift.VerifyStatus.findByValue(iprot.readI32());
      struct.setVerifyStatusIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.verifyShowContent = iprot.readString();
        struct.setVerifyShowContentIsSet(true);
      }
      if (incoming.get(1)) {
        struct.verifyFirstClass = iprot.readString();
        struct.setVerifyFirstClassIsSet(true);
      }
      if (incoming.get(2)) {
        struct.verifySecondClass = iprot.readString();
        struct.setVerifySecondClassIsSet(true);
      }
      if (incoming.get(3)) {
        struct.extraInfo = iprot.readString();
        struct.setExtraInfoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

